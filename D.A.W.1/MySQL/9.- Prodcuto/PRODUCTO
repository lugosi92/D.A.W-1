CREATE database if not exists Productos;
USE Productos;

CREATE TABLE IF NOT EXISTS producto (
    codigo INT(10) UNSIGNED ZEROFILL AUTO_INCREMENT PRIMARY KEY, 
    nombre VARCHAR(100),
    precio DECIMAL(10,2),
    codigo_fabricante INT(10)
);
CREATE index indiceProducto ON producto(codigo_fabricante);
CREATE TABLE IF NOT EXISTS fabricante (
    codigo INT(10) AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100)
);
ALTER TABLE producto ADD FOREIGN KEY (codigo_fabricante) REFERENCES fabricante(codigo) ON DELETE NO ACTION ON UPDATE CASCADE;
INSERT INTO fabricante VALUES (1,'Sony'),
							  (2,'Creative Labs'),
                              (3,'Hewlett-Packard'),
                              (4,'Iomega'),
                              (5,'Fujitsu'),
                              (6,'Winchester'),
                              (7,'Bose');

INSERT INTO producto VALUES (1,'Hard drive', 240, 5),
							(2,'Memory', 120, 6),
                            (3,'Zip drive', 150, 4),
                            (4,'Floppy disk', 5, 6),
                            (5,'Monitor', 240, 1),
                            (6,'DVD drive', 180, 2),
                            (7,'CD drive', 90, 2),
                            (8,'Printer', 270, 3),
                            (9,'Toner cartridge', 66, 3),
                            (10,'DVD burner', 180, 2);




-- 1- Selecciona todos los productos que hay en la tabla añadiendo un campo después de precio que muestre la unidad de €.
SELECT nombre, precio, '€' AS MONEDA FROM producto;

-- 2- Nombre y precio de productos con precio menor de 120€ en formato descendente, mostrando la moneda.
SELECT nombre, precio ,'€' AS MONEDA FROM producto WHERE precio > 120 ORDER BY precio DESC;

-- 3a- Nombre y precio de productos con precio mayor o igual a 180€ de forma Ascendente, mostrando la moneda
SELECT nombre, precio, '€' AS Moneda FROM producto WHERE precio >=180 ORDER BY precio ASC;

-- 3b- Nombre y precio de productos que no tienen un precio mayor o igual a 180€, mostrando la moneda.
SELECT nombre, precio, '€' AS Moneda FROM producto WHERE precio <180;

-- 3c 
SELECT nombre, concat(precio,'€') AS MONEDA FROM producto WHERE precio BETWEEN 100 AND 200 ORDER BY PRECIO ASC;

-- 4
SET @dolar=1.08;
SELECT nombre, FROMAT(precio*@dolar, 4) AS PRECIO_DOLAR, '$' AS MONEDA FROM PRODUCTO;

-- 4b 
SELECT nombre, ROUND(precio*@dolar,2) AS PRECIO_DOLAR, '$' AS DIVISA FROM producto;

-- 5
SET @fujitsu = (SELECT codigo FROM fabricante WHERE nombre ='fujitsu');
SELECT precio, nombre FROM producto WHERE precio > 150 and CODIGO_FABRICANTE = @fujitsu;

-- 6
select * from prudcto where codigo_fabricante IN(1,3,5);

-- 7
select * from prudcto WHERE name LIKE '%DVD%';

-- 8 
select * from prudcto WHERE name LIKE '%DVD%' or nombre like '%CD%';

-- 9
select * from prudcto WHERE name LIKE '%drive%' or name like '%disk%';

-- 10 
select * from prudcto WHERE name LIKE '%e';

-- 11
select  codigo, nombre from fabricante WHERE name LIKE 's%';

-- 12
SELECT * FROM fabricante WHERE name LIKE '%s%' AND nombre like '%e%';

-- 13 
SELECT nombre FROM producto WHERE nombre LIKE  'c%e'OR nombre like 'd%e'; 

-- 14 
SELECT * FROM producto WHERE nombre not like '%DVD%' OR nombre not like '%CD%';

-- 15 ESTA LA HE HECHO Yo
SELECT * FROM prodcuto WHERE nombre not like '%DVD%' OR nombre NOT LIKE '%CD%' AND nombre LIKE '%DRIVE%';

-- 16 
select * from PRODCUTO where CODIGO in(1,5,8) order by PRECIO desc;

-- 17
SELECT * FROM producto WHERE precio > 100 AND (precio NOT LIKE '180%' OR precio NOT LIKE '240%');

-- 18 
SELECT nombre FROM fabricantes LIMIT 5;

-- 19
SELECT nombre FROM fabricante ORDER BY coidgo LIMIT 2 OFFSET 3;

-- 20 
SELECT count(nombre) AS NUMERO_FAB FROM fabricante;

-- 25 
select f.nombre  AS fabricante,
(select count(*) FROM producto p WHERE p.codigo = f.codigo) AS numero_productos
FROM fabricante f
ORDER BY numero_productos DESC;

-- 26
SELECT p.nombre, precio, f.nombre
FROM producto p , fabricante f 
WHERE p.codigo = f.codigo
ORDER BY p.nombre ASC;

SELECT 
p.nombre AS nombre_producto,
p.precio,
    (SELECT f.nombre FROM fabricante f WHERE f.codigo = p.codigo_fabricante) AS nombre_fabricante
FROM producto p
ORDER BY nombre_producto ASC;

-- 27
SELECT f.nombre AS nombre_fabricante;

select CONCAT(AVG(precio),'€') AS PRECIO_MEDIO, f.nombre 
FROM fabricante f, productos p 
WHERE  p.nombre = f.nombre 
group by p.nombre;

-- 28
select CONCAT(AVG(precio),'€') AS PRECIO_MEDIO, f.nombre FROM fabricante f, productos p WHERE  p.nombre = f.nombre 
group by p.nombre HAVING PRECIO_MEDIO >150;

-- 29
SELECT min(precio) FROM producto;

SELECT nombre, codigo FROM producto 
WHERE precio = (SELECT min(precio) FROM producto);
SELECT f.nombre, p.nombre, 
(SELECT min(precio) FROM producto) AS PRECIO_MINIMO
FROM producto p, fabricante f 
WHERE p.codigo_fabricante = f.codigo and 
precio = (SELECT min(precio) FROM producto);

-- 30
SELECT nombre, codigo FROM producto 
WHERE precio = (SELECT min(precio) FROM producto);
SELECT f.nombre, p.nombre, 
(SELECT min(precio) ,'€' AS Divisa FROM producto) AS PRECIO_MINIMO
FROM producto p, fabricante f 
WHERE p.codigo_fabricante = f.codigo and 
precio = (SELECT min(precio) FROM producto)
UNION
SELECT nombre, codigo FROM producto 
WHERE precio = (SELECT max(precio) FROM producto);
SELECT f.nombre, p.nombre, 
(SELECT max(precio),'€' AS Divisa  FROM producto) AS PRECIO_MINIMO
FROM producto p, fabricante f 
WHERE p.codigo_fabricante = f.codigo and 
precio = (SELECT max(precio) FROM producto);

SELECT P.nombre, F.nombre , (SELECT max(precio) , '€' AS Divisa ) AS precioMaximo 
FROM producto P, fabricante F WHERE P.codigo_fabricante = F.codigo 
AND precio = (SELECT MIN(precio) FROM producto)
UNION
SELECT P.nombre, F.nombre ,  (SELECT min(precio) , '€' AS Divisa ) AS precioMaximo 
FROM producto P, fabricante F WHERE P.codigo_fabricante = F.codigo 
AND precio = (SELECT min(precio) FROM producto);

-- 31 
INSERT INTO producto (nombre, precio, codigo_fabricante) VALUES ('bose Multimedia Speakers',140,(select codigo FROM fabricante WHERE nombre = 'Winchester'));
INSERT INTO producto (nombre, precio, codigo_fabricante) VALUES  ('Bluetooth Speakers', 230, (select codigo FROM fabricante WHERE nombre = 'bose')),
																 ('Multimedia Speakers', 140, (select codigo FROM fabricante WHERE nombre = 'bose')),
                                                                  ('Multimedia White Speakers', 80, (select codigo FROM fabricante WHERE nombre = 'bose'));




SELECT 
(Select  max(precio) FROM producto p WHERE p.codigo_fabricante = f.codigo )AS PrecioMaximo,
p.nombre AS NombreProducto, 
f.nombre AS NombreFabricante
FROM producto p , fabricante f
WHERE p.codigo_fabricante = f.codigo;

SELECT 
(Select  min(precio) FROM producto p WHERE p.codigo_fabricante = f.codigo )AS PrecioMinimo,
p.nombre AS NombreProducto, 
f.nombre AS NombreFabricante
FROM producto p , fabricante f
WHERE p.codigo_fabricante = f.codigo;

SELECT 
(Select  min(precio) FROM producto p WHERE p.codigo_fabricante = f.codigo )AS PrecioMinimo,
(Select  max(precio) FROM producto p WHERE p.codigo_fabricante = f.codigo )AS PrecioMaximo,
p.nombre AS NombreProducto, 
f.nombre AS NombreFabricante
FROM producto p , fabricante f
WHERE p.codigo_fabricante = f.codigo;

select p.nombre, max(precio) as PRECIO, f.nombre as nombreF FROM producto p, fabricante f
WHERE p.codigo_fabricante = f.codigo GROUP BY f.nombre 
UNION 
select p.nombre, min(precio) AS PRECIO, f.nombre as nombreF FROM producto p, fabricante f
WHERE p.codigo_fabricante = f.codigo GROUP BY f.nombre 
ORDER BY nombreF , PRECIO;

SELECT @@sql_mode;

SET sql_mode='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- 32
SELECT avg(precio) AS mediaProducto, p.nombre, f.nombre
FROM producto p, fabricante f
WHERE p.codigo_fabricante = f.codigo
GROUP BY f.nombre HAVING f.nombre ="Creative Labs";
-- 33

SELECT f.nombre , avg(precio) as precioMedio 
FROM producto p, fabricante f 
WHERE p.codigo_fabricante = f.codigo
group by  f.nombre having precioMedio>150
ORDER BY precioMedio DESC;

select count(precio) AS numero_productos, f.nombre
from producto p, fabricante f 
WHERE p.codigo_fabricante = f.codigo
group by f.nombre HAVING numero_productos > 1
ORDER BY numero_productos DESC;

SELECT f.nombre , avg(precio) as precioMedio , Count(precio) AS numero_productos
FROM producto p, fabricante f 
WHERE p.codigo_fabricante = f.codigo
group by  f.nombre having precioMedio>140 AND numero_productos > 1
ORDER BY precioMedio DESC;
-- 34

set sql_safe_updates = 0; -- modo seguro deshabilitar el modo seguro de actualizaciones
UPDATE producto SET precio = preco * 0.9 WHERE precio <= 200;
UPDATE producto SET precio = preco * 0.85 WHERE precio > 200;
set sql_safe_updates=1;
-- hacer copias mysqldamp


-- create view  vista01 as (consulta) crea una tabla temporal
